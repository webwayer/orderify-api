import { Router } from 'express'
import { AlbumType } from 'photoLibrary/_/Album';
import { PhotoType } from 'photoLibrary/_/Photo';
import { storage } from 'pkgcloud'
import { imagesFactory } from 'photoLibrary/images';

export function photosRouterFactory(router: Router, Album: AlbumType, Photo: PhotoType, images: ReturnType<typeof imagesFactory>) {
    router.get('/', function (req, res) {
        console.log(req.session)
        res.send('Hello World')
    })

    router.get('/albums', async function (req, res) {
        res.json(await Album.findAll({ where: { userId: req.session.userId } }))
    })

    router.get('/photos', async function (req, res) {
        res.json(await Photo.findAll({ where: { userId: req.session.userId } }))
    })

    router.get('/photos/:id/download', async (req, res) => {
        const photo = await Photo.findOne({ where: { userId: req.session.userId, id: (<any>req.params).id } })
        if (photo) {
            images.downloadAsStream(photo.id).pipe(res)
        } else {
            res.end()
        }
    })

    return router;
}